openapi: 3.1.0
info:
  title: security example
  description: Demonstrate the supported security schemes
  version: 1.0.0
paths:
  /basic:
    get:
      summary: Basic auth endpoint
      description: Endpoint secured by basic auth
      operationId: getBasicAuth
      responses:
        "200":
          description: successful operation
        "401":
          description: unauthenticated
        "403":
          description: unauthorized
      security:
        - BasicAuth: [Admin]
  /bearer:
    get:
      summary: Bearer auth endpoint
      description: Endpoint secured by Bearer auth
      operationId: getBearerAuth
      responses:
        "200":
          description: successful operation
        "401":
          description: unauthenticated
        "403":
          description: unauthorized
      security:
        - BearerAuth: [Admin]
  /apikey:
    get:
      summary: ApiKey auth endpoint
      description: Endpoint secured by ApiKey auth
      operationId: getApiKeyAuth
      responses:
        "200":
          description: successful operation
        "401":
          description: unauthenticated
        "403":
          description: unauthorized
      security:
        - ApiKeyAuth: [Admin]
  /mutualtls:
    get:
      summary: MutualTLS auth endpoint
      description: Endpoint secured by MutualTLS auth
      operationId: getMutualTLSAuth
      responses:
        "200":
          description: successful operation
        "401":
          description: unauthenticated
        "403":
          description: unauthorized
      security:
        - MutualTLS: [Admin]
  /oidc:
    get:
      summary: OIDC auth endpoint
      description: Endpoint secured by OIDC auth
      operationId: getOIDCAuth
      responses:
        "200":
          description: successful operation
        "401":
          description: unauthenticated
        "403":
          description: unauthorized
      security:
        - OpenID: [Admin]
  /oauth2:
    get:
      summary: OAuth2 auth endpoint
      description: Endpoint secured by OAuth2 auth
      operationId: getOAuth2Auth
      responses:
        "200":
          description: successful operation
        "401":
          description: unauthenticated
        "403":
          description: unauthorized
      security:
        - OAuth2: [Admin]
  # /multiple/apitokens:
  #   get:
  #     summary: Multiple auth endpoint
  #     description: Endpoint secured by Multiple api tokens that must all be satisfied
  #     operationId: getMultipleApiTokenAuth
  #     responses:
  #       "200":
  #         description: successful operation
  #       "401":
  #         description: unauthenticated
  #       "403":
  #         description: unauthorized
  #     security:
  #       - ApiAppID: [Admin]
  #         ApiKey: [Admin]
  # /multiple/and:
  #   get:
  #     summary: Multiple auth endpoint
  #     description: Endpoint secured by Multiple auth mechanisms that must all be satisfied
  #     operationId: getMultipleAuth
  #     responses:
  #       "200":
  #         description: successful operation
  #       "401":
  #         description: unauthenticated
  #       "403":
  #         description: unauthorized
  #     security:
  #       - OAuth2: [Admin]
  #         OpenID: [Admin]
  #         ApiKey: [Admin]
  #         BearerAuth: [Admin]
  # /multiple/or:
  #   get:
  #     summary: OAuth2 auth endpoint
  #     description: Endpoint secured by OAuth2 auth
  #     operationId: getOAuth2Auth
  #     responses:
  #       "200":
  #         description: successful operation
  #       "401":
  #         description: unauthenticated
  #       "403":
  #         description: unauthorized
  #     security:
  #       - OAuth2: [Admin]
  #       - OpenID: [Admin]
  #       - ApiKey: [Admin]
  #       - BearerAuth: [Admin]
components:
  schemas:
    Dog:
      type: object
      required:
        - name
        - owner
        - bark
      additionalProperties: false
      properties:
        name:
          type: string
        owner:
          type: string
        bark:
          type: string
    Cat:
      type: object
      required:
        - name
        - owner
        - meow
      additionalProperties: false
      properties:
        name:
          type: string
        owner:
          type: string
        meow:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    ApiAppId:
      type: apiKey
      in: header
      name: X-APP-ID      
    MutualTLS:
      type: mutualTLS
    OpenID:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations